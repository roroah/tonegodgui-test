apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'eclipse'
apply plugin: "idea"
apply plugin: 'maven'

description = 'Tonegod\'s graphical user-interface test library'
group = 'tonegod'
version = '0.1.0'

ext {
		appName = 'tonegodgui-test'
		jmonkeyengine_version = 'v3.2.1-stable'
}
	sourceCompatibility = 1.8

	repositories {
		mavenLocal()
		mavenCentral()
//		maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
//		maven { url "https://oss.sonatype.org/content/repositories/releases/" }
//		maven { url 'http://updates.jmonkeyengine.org/maven' }		
		maven { url "https://jitpack.io" }
	}


mainClassName = 'tonegod.gui.tests.Main'
if (!hasProperty('mainClass')) {
	ext.mainClass = 'tonegod.gui.tests.Main'
}

dependencies {
	compile fileTree(dir: 'lib', include: ['*.jar'])

	compile "com.github.jMonkeyEngine.jMonkeyEngine:jme3-core:$jmonkeyengine_version"
	compile "com.github.jMonkeyEngine.jMonkeyEngine:jme3-desktop:$jmonkeyengine_version"
	compile "com.github.jMonkeyEngine.jMonkeyEngine:jme3-lwjgl:$jmonkeyengine_version"
	compile 'com.github.roroah:tonegodgui:master-SNAPSHOT'
	
	
}

eclipse.classpath.file {
	beforeMerged { classpath ->
		classpath.entries.removeAll() { c ->
			c.kind == 'src'
		}
	}

	withXml {
		def node = it.asNode()

//		node.appendNode('classpathentry kind="src" path="src"')

		node.children().removeAll() { c ->
			def path = c.attribute('path')
			path != null && (
					path.contains('/com.android.support/support-v4')
					)
		}
	}
	
}

sourceSets {
	main {
		java { srcDir 'src'}
		resources { srcDir 'assets' }
	}
}


//sets up the Android Eclipse project, using the old Ant based build.
eclipse {
	// need to specify Java source sets explicitely, SpringSource Gradle Eclipse plugin
	// ignores any nodes added in classpath.file.withXml
//	sourceSets {
//		main { 
//			java.srcDirs "src"
//			resources.srcDirs = ["src"]
//		}
//	}
	classpath {
		downloadSources=true
	 }

	jdt {
		sourceCompatibility = 1.8
		targetCompatibility = 1.8
	}

	project {
		name = appName 
		natures 'org.springsource.ide.eclipse.gradle.core.nature'
	}
}

// custom tasks for creating source/javadoc jars
task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = 'sources'
	from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
	classifier = 'javadoc'
	from javadoc.destinationDir
}

task pom {
    doLast {
        pom {
            project {
                licenses {
                    license {
                        distribution 'repo'
                        name 'FreeBSD License'
                        url 'https://opensource.org/licenses/BSD-2-Clause'
                    }
                }
            }
        }.writeTo("${buildDir}/libs/tonegodgui-${version}.pom")
    }
}
build { dependsOn 'pom' }

// add javadoc/source jar tasks as artifacts
artifacts {
	archives sourcesJar
	//, javadocJar
}

task wrapper(type: Wrapper) {
	gradleVersion = '2.2.1'
}



